name: deploy-book

# Only run this when the main branch changes
on:
  push:
    branches:
    - main

jobs:
  deploy-book:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    # Set up conda environment
    - name: Set up conda environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: rtraining
        environment-file: environment.yml
    - name: Initialize conda
      run: |
        conda init bash
    # set up R - Kernel
    - name: R Kernel
      shell: bash -el {0} # need to restart bash; apparently this may do the trick
      run: |
        conda activate rtraining
        Rscript -e "IRkernel::installspec()"
    # translate Rmd to myst
    - name: R Kernel
      shell: bash -el {0} # need to restart bash; apparently this may do the trick
      run: |
        conda activate rtraining
        Rscript rmd2myst.R
        Rscript rmd_download.R
     # copy rmd files without solutions to new branch
     # adapted from https://stackoverflow.com/questions/69577518/github-action-to-copy-specific-folders-from-one-branch-to-another-in-the-same-re
    - name: copy rmd without solutions
      env:
          SRC_FOLDER: 'Rmd_ohne_Loesungen'
          TARGET_BRANCH: 'Rmd_ohne_Loesung'
      run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add . # add created files, including those in the Rmd_ohne_Loesungen folder
          git commit -m "adding created files"
          git fetch                         # fetch branches
          git checkout $TARGET_BRANCH       # checkout to your branch
          git checkout main -- $SRC_FOLDER  # get the Rmd_ohne_Loesungen folder
          git add .
          git commit -m "updating rmd without solutions" --allow-empty
          git push origin $TARGET_BRANCH # push to remote branch
          git checkout main
          rm -rf $SRC_FOLDER # remove Rmd_ohne_Loesungen folder to avoid issues with building the website
    # check if all Rmd files are mentioned in toc
    - name: Check if rmd_not_in_toc.md exists
      id: check_file
      run: |
        if [ -f "rmd_not_in_toc.md" ]; then
          echo "::set-output name=exists::true"
        else
          echo "::set-output name=exists::false"
        fi
    # If not all Rmd files are mentioned in toc, a file called rmd_not_in_toc.md
    # was created. We now capture the content of this file which will be used to
    # create a comment on an issue. See https://github.com/marketplace/actions/create-an-issue
    # for more details
    - name: Get rmd_not_in_toc content
      if: steps.check_file.outputs.exists == 'true'
      id: get_content
      run: |
        CONTENT=$(cat rmd_not_in_toc.md)
        echo "::set-output name=content::$CONTENT"
    - name: Create comment on issue
      if: steps.check_file.outputs.exists == 'true'
      uses: JasonEtco/create-an-issue@v2
      env:  
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        filename: rmd_not_in_toc.md
        update_existing: true
    # Build the book
    - name: Build the book
      shell: bash -el {0}
      run: |
        conda activate rtraining
        jupyter-book build .

    # Push the book's HTML to github-pages
    - name: GitHub Pages action
      uses: peaceiris/actions-gh-pages@v3.6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./_build/html
